security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    
    role_hierarchy:
        ROLE_FULL_USER: [ROLE_USER_EDIT, ROLE_TREASURE_CREATE, ROLE_TREASURE_EDIT]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # anonymous: false

            lazy: true
            provider: app_user_provider

            # With this setup, when we send a POST request to /api/security/login, the json_login
            # authenticator will automatically start running, look for JSON in the request, decode it,
            # and use the email and password keys inside to log us in.
            json_login:
                check_path: app_login
                username_path: email
                password_path: password

            logout:
                path: app_logout

                # where to redirect after logout
                # target: '/admin'

            access_token:
                token_handler: App\Security\ApiTokenHandler

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            #
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
