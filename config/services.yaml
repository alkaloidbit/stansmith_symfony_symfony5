# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # We define a parameter ...
    media_path: '%kernel.project_dir%/public/uploads'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
          # ... then bind it to $mediaPath variable.
          $media_path: '%media_path%'
          $mediaLibrary: '%media_path%/MusicLibrary'
          $mediaPathCover: '%media_path%/covers'
          $publicFilesystem: '@oneup_flysystem.public_filesystem_filesystem'

    Intervention\Image\ImageManager:
        arguments:
            - driver: gd # or imagick

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Exception\HTTPExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    # From https://thecodingmachine.io/building-a-single-page-application-with-symfony-4-and-vues
    # app.security.hash.password.listener:
    #         class: App\Security\HashPasswordListener
    #         tags:
    #         - { name: doctrine.event_subscriber }

    App\Serializer\MediaObjectContentUrlNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'
        
    App\Serializer\ThumbnailObjectContentUrlNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'

    Liip\ImagineBundle\Service\FilterService:
        alias: 'liip_imagine.service.filter'
        
    # App\EventListener\VichUploadListener:
    # tags:
    # - { name: kernel.event_listener, event: vich_uploader.post_upload }
